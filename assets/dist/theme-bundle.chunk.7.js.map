{"version":3,"sources":["webpack:///./assets/js/theme/common/form-utils.js","webpack:///./node_modules/lodash/_baseIteratee.js","webpack:///./assets/js/theme/common/state-country.js","webpack:///./node_modules/lodash/each.js","webpack:///./node_modules/lodash/transform.js","webpack:///./node_modules/lodash/_baseForOwn.js","webpack:///./node_modules/lodash/_baseFor.js","webpack:///./node_modules/lodash/_createBaseFor.js","webpack:///./assets/js/theme/common/gift-certificate-validator.js","webpack:///./node_modules/lodash/bind.js","webpack:///./node_modules/lodash/_createWrap.js","webpack:///./node_modules/lodash/_createCtor.js","webpack:///./node_modules/lodash/_getHolder.js","webpack:///./node_modules/lodash/_replaceHolders.js","webpack:///./assets/js/theme/cart/shipping-estimator.js","webpack:///./assets/js/theme/cart.js"],"names":["inputTagNames","classifyForm","formSelector","options","$form","$","$inputs","find","join","formFieldClass","each","__","input","specificClassName","$input","$formField","parent","tagName","prop","toLowerCase","className","inputType","addClass","classifyInput","insertStateHiddenField","$stateField","stateFieldAttrs","type","name","$field","fieldId","match","length","getFieldId","value","after","Validators","setEmailValidation","validator","field","add","selector","validate","cb","val","forms","email","errorMessage","setPasswordValidation","passwordSelector","password2Selector","requirements","isOptional","$password","passwordValidations","result","RegExp","alpha","numeric","minlength","error","setMinMaxPriceValidation","selectors","errorSelector","fieldsetSelector","maxPriceSelector","minPriceSelector","configure","form","preventSubmit","successClass","setMessageOptions","errorSpan","setStateCountryValidation","cleanUpStateValidation","$fieldClassElement","data","Object","keys","nod","classes","forEach","hasClass","removeClass","module","exports","stateElement","context","callback","on","event","countryName","currentTarget","utils","api","country","getByName","err","response","showAlertModal","state_error","$currentInput","states","newElement","attrs","item","ret","replacementAttributes","id","class","replaceWith","$newElement","prev","hide","makeStateOptional","$selectElement","$hiddenInput","remove","append","required","show","makeStateRequired","statesArray","container","push","prefix","stateObj","useIdForStates","html","addOptions","array","iteratee","index","arrayEach","baseCreate","baseForOwn","baseIteratee","getPrototype","isArray","isBuffer","isFunction","isObject","isTypedArray","object","accumulator","isArr","isArrLike","Ctor","constructor","baseFor","createBaseFor","fromRight","keysFunc","iterable","props","key","cert","baseRest","createWrap","getHolder","replaceHolders","bind","func","thisArg","partials","bitmask","holders","placeholder","apply","createCtor","root","isBind","wrapper","argsIndex","argsLength","arguments","leftIndex","leftLength","args","Array","fn","this","thisBinding","prototype","ShippingEstimator","$element","$state","initFormValidation","bindStateCountryChange","bindEstimatorEvents","shippingEstimator","shippingValidator","submit","performCheck","areAll","preventDefault","bindValidation","bindStateValidation","bindUPSRates","countryId","Number","isNaN","$ele","eleVal","$estimatorFormUps","$estimatorFormDefault","toggleClass","$last","stateCountry","swal","fire","text","icon","Error","getStatus","is","attr","$estimatorContainer","$estimatorForm","params","country_id","state_id","city","zip_code","cart","getShippingQuotes","content","clickEvent","quoteId","submitShippingQuote","window","location","reload","Cart","onReady","$cartContent","$cartMessages","$cartTotals","$overlay","bindEvents","cartUpdate","$target","itemId","$el","oldQty","parseInt","maxQty","minQty","minError","maxError","newQty","itemUpdate","status","refreshContent","errors","cartUpdateQtyTextChange","preVal","invalidEntry","cartRemoveItem","itemRemove","cartEditOptions","modal","defaultModal","open","productAttributes","configureInCart","template","updateContent","bindGiftWrappingForm","hooks","option","parents","$submit","$messageBox","optionChange","serialize","purchasing_message","purchasable","instock","$cartItemsRows","$cartPageTitle","getContent","totals","pageTitle","statusMessages","quantity","trigger","bindCartEvents","change","string","showCancelButton","then","bindPromoCodeEvents","$couponContainer","$couponForm","$codeInput","code","applyCode","bindGiftCertificateEvents","$certContainer","$certForm","$certInput","toggle","giftCertCheck","applyGiftCertificate","resp","bindGiftWrappingEvents","getItemGiftWrappingOptions","toggleViews","$singleForm","$multiForm","$select","allowMessage","PageManager"],"mappings":"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","file":"theme-bundle.chunk.7.js","sourcesContent":["import $ from 'jquery';\nimport _ from 'lodash';\nimport nod from './nod';\nimport forms from './models/forms';\n\nconst inputTagNames = [\n    'input',\n    'select',\n    'textarea',\n];\n\n/**\n * Apply class name to an input element on its type\n * @param {object} input\n * @param {string} formFieldClass\n * @return {object} Element itself\n */\nfunction classifyInput(input, formFieldClass) {\n    const $input = $(input);\n    const $formField = $input.parent(`.${formFieldClass}`);\n    const tagName = $input.prop('tagName').toLowerCase();\n\n    let className = `${formFieldClass}--${tagName}`;\n    let specificClassName;\n\n    // Input can be text/checkbox/radio etc...\n    if (tagName === 'input') {\n        const inputType = $input.prop('type');\n\n        if (_.includes(['radio', 'checkbox', 'submit'], inputType)) {\n            // ie: .form-field--checkbox, .form-field--radio\n            className = `${formFieldClass}--${_.camelCase(inputType)}`;\n        } else {\n            // ie: .form-field--input .form-field--inputText\n            specificClassName = `${className}${_.capitalize(inputType)}`;\n        }\n    }\n\n    // Apply class modifier\n    return $formField\n        .addClass(className)\n        .addClass(specificClassName);\n}\n\n/**\n * Apply class name to each input element in a form based on its type\n * @example\n * // Before\n * <form id=\"form\">\n *     <div class=\"form-field\">\n *         <input type=\"text\">\n *     </div>\n *     <div class=\"form-field\">\n *         <select>...</select>\n *     </div>\n * </form>\n *\n * classifyForm('#form', { formFieldClass: 'form-field' });\n *\n * // After\n * <div class=\"form-field form-field--input form-field--inputText\">...</div>\n * <div class=\"form-field form-field--select\">...</div>\n *\n * @param {string|object} formSelector - selector or element\n * @param {object} options\n * @return {jQuery} Element itself\n */\nexport function classifyForm(formSelector, options = {}) {\n    const $form = $(formSelector);\n    const $inputs = $form.find(inputTagNames.join(', '));\n\n    // Obtain options\n    const { formFieldClass = 'form-field' } = options;\n\n    // Classify each input in a form\n    $inputs.each((__, input) => {\n        classifyInput(input, formFieldClass);\n    });\n\n    return $form;\n}\n\n/**\n * Get id from given field\n * @param {object} $field JQuery field object\n * @return {string}\n */\nfunction getFieldId($field) {\n    const fieldId = $field.prop('name').match(/(\\[.*\\])/);\n\n    if (fieldId && fieldId.length !== 0) {\n        return fieldId[0];\n    }\n\n    return '';\n}\n\n/**\n * Insert hidden field after State/Province field\n * @param {object} $stateField JQuery field object\n */\nfunction insertStateHiddenField($stateField) {\n    const fieldId = getFieldId($stateField);\n    const stateFieldAttrs = {\n        type: 'hidden',\n        name: `FormFieldIsText${fieldId}`,\n        value: '1',\n    };\n\n    $stateField.after($('<input />', stateFieldAttrs));\n}\n\nconst Validators = {\n    /**\n     * Sets up a new validation when the form is dirty\n     * @param validator\n     * @param field\n     */\n    setEmailValidation: (validator, field) => {\n        if (field) {\n            validator.add({\n                selector: field,\n                validate: (cb, val) => {\n                    const result = forms.email(val);\n\n                    cb(result);\n                },\n                errorMessage: 'You must enter a valid email.',\n            });\n        }\n    },\n\n    /**\n     * Validate password fields\n     * @param validator\n     * @param passwordSelector\n     * @param password2Selector\n     * @param requirements\n     * @param isOptional\n     */\n    setPasswordValidation: (validator, passwordSelector, password2Selector, requirements, isOptional) => {\n        const $password = $(passwordSelector);\n        const passwordValidations = [\n            {\n                selector: passwordSelector,\n                validate: (cb, val) => {\n                    const result = val.length;\n\n                    if (isOptional) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: 'You must enter a password.',\n            },\n            {\n                selector: passwordSelector,\n                validate: (cb, val) => {\n                    const result = val.match(new RegExp(requirements.alpha))\n                        && val.match(new RegExp(requirements.numeric))\n                        && val.length >= requirements.minlength;\n\n                    // If optional and nothing entered, it is valid\n                    if (isOptional && val.length === 0) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: requirements.error,\n            },\n            {\n                selector: password2Selector,\n                validate: (cb, val) => {\n                    const result = val.length;\n\n                    if (isOptional) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: 'You must enter a password.',\n            },\n            {\n                selector: password2Selector,\n                validate: (cb, val) => {\n                    const result = val === $password.val();\n\n                    cb(result);\n                },\n                errorMessage: 'Your passwords do not match.',\n            },\n        ];\n\n        validator.add(passwordValidations);\n    },\n\n    /**\n     * Validate password fields\n     * @param {Nod} validator\n     * @param {Object} selectors\n     * @param {string} selectors.errorSelector\n     * @param {string} selectors.fieldsetSelector\n     * @param {string} selectors.formSelector\n     * @param {string} selectors.maxPriceSelector\n     * @param {string} selectors.minPriceSelector\n     */\n    setMinMaxPriceValidation: (validator, selectors) => {\n        const {\n            errorSelector,\n            fieldsetSelector,\n            formSelector,\n            maxPriceSelector,\n            minPriceSelector,\n        } = selectors;\n\n        validator.configure({\n            form: formSelector,\n            preventSubmit: true,\n            successClass: '_', // KLUDGE: Don't apply success class\n        });\n\n        validator.add({\n            errorMessage: 'Min price must be less than max. price.',\n            selector: minPriceSelector,\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\n        });\n\n        validator.add({\n            errorMessage: 'Min price must be less than max. price.',\n            selector: maxPriceSelector,\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\n        });\n\n        validator.add({\n            errorMessage: 'Max. price is required.',\n            selector: maxPriceSelector,\n            validate: 'presence',\n        });\n\n        validator.add({\n            errorMessage: 'Min. price is required.',\n            selector: minPriceSelector,\n            validate: 'presence',\n        });\n\n        validator.add({\n            errorMessage: 'Input must be greater than 0.',\n            selector: [minPriceSelector, maxPriceSelector],\n            validate: 'min-number:0',\n        });\n\n        validator.setMessageOptions({\n            selector: [minPriceSelector, maxPriceSelector],\n            parent: fieldsetSelector,\n            errorSpan: errorSelector,\n        });\n    },\n\n    /**\n     * Sets up a new validation when the form is dirty\n     * @param validator\n     * @param field\n     */\n    setStateCountryValidation: (validator, field) => {\n        if (field) {\n            validator.add({\n                selector: field,\n                validate: 'presence',\n                errorMessage: 'The \\'State/Province\\' field cannot be blank.',\n            });\n        }\n    },\n\n    /**\n     * Removes classes from dirty form if previously checked\n     * @param field\n     */\n    cleanUpStateValidation: (field) => {\n        const $fieldClassElement = $((`[data-type=\"${field.data('fieldType')}\"]`));\n\n        Object.keys(nod.classes).forEach((value) => {\n            if ($fieldClassElement.hasClass(nod.classes[value])) {\n                $fieldClassElement.removeClass(nod.classes[value]);\n            }\n        });\n    },\n};\n\nexport { Validators, insertStateHiddenField };\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","import $ from 'jquery';\nimport utils from '@bigcommerce/stencil-utils';\nimport _ from 'lodash';\nimport { insertStateHiddenField } from './form-utils';\nimport { showAlertModal } from '../global/modal';\n\n/**\n * If there are no options from bcapp, a text field will be sent. This will create a select element to hold options after the remote request.\n * @returns {jQuery|HTMLElement}\n */\nfunction makeStateRequired(stateElement, context) {\n    const attrs = _.transform(stateElement.prop('attributes'), (result, item) => {\n        const ret = result;\n        ret[item.name] = item.value;\n        return ret;\n    });\n\n    const replacementAttributes = {\n        id: attrs.id,\n        'data-label': attrs['data-label'],\n        class: 'form-select',\n        name: attrs.name,\n        'data-field-type': attrs['data-field-type'],\n    };\n\n    stateElement.replaceWith($('<select></select>', replacementAttributes));\n\n    const $newElement = $('[data-field-type=\"State\"]');\n    const $hiddenInput = $('[name*=\"FormFieldIsText\"]');\n\n    if ($hiddenInput.length !== 0) {\n        $hiddenInput.remove();\n    }\n\n    if ($newElement.prev().find('small').length === 0) {\n        // String is injected from localizer\n        $newElement.prev().append(`<small>${context.required}</small>`);\n    } else {\n        $newElement.prev().find('small').show();\n    }\n\n    return $newElement;\n}\n\n/**\n * If a country with states is the default, a select will be sent,\n * In this case we need to be able to switch to an input field and hide the required field\n */\nfunction makeStateOptional(stateElement) {\n    const attrs = _.transform(stateElement.prop('attributes'), (result, item) => {\n        const ret = result;\n        ret[item.name] = item.value;\n\n        return ret;\n    });\n\n    const replacementAttributes = {\n        type: 'text',\n        id: attrs.id,\n        'data-label': attrs['data-label'],\n        class: 'form-input',\n        name: attrs.name,\n        'data-field-type': attrs['data-field-type'],\n    };\n\n    stateElement.replaceWith($('<input />', replacementAttributes));\n\n    const $newElement = $('[data-field-type=\"State\"]');\n\n    if ($newElement.length !== 0) {\n        insertStateHiddenField($newElement);\n        $newElement.prev().find('small').hide();\n    }\n\n    return $newElement;\n}\n\n/**\n * Adds the array of options from the remote request to the newly created select box.\n * @param {Object} statesArray\n * @param {jQuery} $selectElement\n * @param {Object} options\n */\nfunction addOptions(statesArray, $selectElement, options) {\n    const container = [];\n\n    container.push(`<option value=\"\">${statesArray.prefix}</option>`);\n\n    if (!_.isEmpty($selectElement)) {\n        _.each(statesArray.states, (stateObj) => {\n            if (options.useIdForStates) {\n                container.push(`<option value=\"${stateObj.id}\">${stateObj.name}</option>`);\n            } else {\n                container.push(`<option value=\"${stateObj.name}\">${stateObj.name}</option>`);\n            }\n        });\n\n        $selectElement.html(container.join(' '));\n    }\n}\n\n/**\n *\n * @param {jQuery} stateElement\n * @param {Object} context\n * @param {Object} options\n * @param {Function} callback\n */\nexport default function (stateElement, context = {}, options, callback) {\n    /**\n     * Backwards compatible for three parameters instead of four\n     *\n     * Available options:\n     *\n     * useIdForStates {Bool} - Generates states dropdown using id for values instead of strings\n     */\n    if (typeof options === 'function') {\n        /* eslint-disable no-param-reassign */\n        callback = options;\n        options = {};\n        /* eslint-enable no-param-reassign */\n    }\n\n    $('select[data-field-type=\"Country\"]').on('change', event => {\n        const countryName = $(event.currentTarget).val();\n\n        if (countryName === '') {\n            return;\n        }\n\n        utils.api.country.getByName(countryName, (err, response) => {\n            if (err) {\n                showAlertModal(context.state_error);\n                return callback(err);\n            }\n\n            const $currentInput = $('[data-field-type=\"State\"]');\n\n            if (!_.isEmpty(response.data.states)) {\n                // The element may have been replaced with a select, reselect it\n                const $selectElement = makeStateRequired($currentInput, context);\n\n                addOptions(response.data, $selectElement, options);\n                callback(null, $selectElement);\n            } else {\n                const newElement = makeStateOptional($currentInput, context);\n\n                callback(null, newElement);\n            }\n        });\n    });\n}\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var arrayEach = require('./_arrayEach'),\n    baseCreate = require('./_baseCreate'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee'),\n    getPrototype = require('./_getPrototype'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isTypedArray = require('./isTypedArray');\n\n/**\n * An alternative to `_.reduce`; this method transforms `object` to a new\n * `accumulator` object which is the result of running each of its own\n * enumerable string keyed properties thru `iteratee`, with each invocation\n * potentially mutating the `accumulator` object. If `accumulator` is not\n * provided, a new object with the same `[[Prototype]]` will be used. The\n * iteratee is invoked with four arguments: (accumulator, value, key, object).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 1.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The custom accumulator value.\n * @returns {*} Returns the accumulated value.\n * @example\n *\n * _.transform([2, 3, 4], function(result, n) {\n *   result.push(n *= n);\n *   return n % 2 == 0;\n * }, []);\n * // => [4, 9]\n *\n * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] }\n */\nfunction transform(object, iteratee, accumulator) {\n  var isArr = isArray(object),\n      isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n  iteratee = baseIteratee(iteratee, 4);\n  if (accumulator == null) {\n    var Ctor = object && object.constructor;\n    if (isArrLike) {\n      accumulator = isArr ? new Ctor : [];\n    }\n    else if (isObject(object)) {\n      accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n    }\n    else {\n      accumulator = {};\n    }\n  }\n  (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n    return iteratee(accumulator, value, index, object);\n  });\n  return accumulator;\n}\n\nmodule.exports = transform;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","export default function (cert) {\n    if (typeof cert !== 'string') {\n        return false;\n    }\n\n    // Add any custom gift certificate validation logic here\n    return true;\n}\n","var baseRest = require('./_baseRest'),\n    createWrap = require('./_createWrap'),\n    getHolder = require('./_getHolder'),\n    replaceHolders = require('./_replaceHolders');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_PARTIAL_FLAG = 32;\n\n/**\n * Creates a function that invokes `func` with the `this` binding of `thisArg`\n * and `partials` prepended to the arguments it receives.\n *\n * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n * may be used as a placeholder for partially applied arguments.\n *\n * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n * property of bound functions.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to bind.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {...*} [partials] The arguments to be partially applied.\n * @returns {Function} Returns the new bound function.\n * @example\n *\n * function greet(greeting, punctuation) {\n *   return greeting + ' ' + this.user + punctuation;\n * }\n *\n * var object = { 'user': 'fred' };\n *\n * var bound = _.bind(greet, object, 'hi');\n * bound('!');\n * // => 'hi fred!'\n *\n * // Bound with placeholders.\n * var bound = _.bind(greet, object, _, '!');\n * bound('hi');\n * // => 'hi fred!'\n */\nvar bind = baseRest(function(func, thisArg, partials) {\n  var bitmask = WRAP_BIND_FLAG;\n  if (partials.length) {\n    var holders = replaceHolders(partials, getHolder(bind));\n    bitmask |= WRAP_PARTIAL_FLAG;\n  }\n  return createWrap(func, bitmask, thisArg, partials, holders);\n});\n\n// Assign default placeholders.\nbind.placeholder = {};\n\nmodule.exports = bind;\n","var apply = require('./_apply'),\n    createCtor = require('./_createCtor'),\n    root = require('./_root');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1;\n\n/**\n * Creates a function that wraps `func` to invoke it with the `this` binding\n * of `thisArg` and `partials` prepended to the arguments it receives.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} partials The arguments to prepend to those provided to\n *  the new function.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createPartial(func, bitmask, thisArg, partials) {\n  var isBind = bitmask & WRAP_BIND_FLAG,\n      Ctor = createCtor(func);\n\n  function wrapper() {\n    var argsIndex = -1,\n        argsLength = arguments.length,\n        leftIndex = -1,\n        leftLength = partials.length,\n        args = Array(leftLength + argsLength),\n        fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n    while (++leftIndex < leftLength) {\n      args[leftIndex] = partials[leftIndex];\n    }\n    while (argsLength--) {\n      args[leftIndex++] = arguments[++argsIndex];\n    }\n    return apply(fn, isBind ? thisArg : this, args);\n  }\n  return wrapper;\n}\n\nmodule.exports = createPartial;\n","var baseCreate = require('./_baseCreate'),\n    isObject = require('./isObject');\n\n/**\n * Creates a function that produces an instance of `Ctor` regardless of\n * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n *\n * @private\n * @param {Function} Ctor The constructor to wrap.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createCtor(Ctor) {\n  return function() {\n    // Use a `switch` statement to work with class constructors. See\n    // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n    // for more details.\n    var args = arguments;\n    switch (args.length) {\n      case 0: return new Ctor;\n      case 1: return new Ctor(args[0]);\n      case 2: return new Ctor(args[0], args[1]);\n      case 3: return new Ctor(args[0], args[1], args[2]);\n      case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n      case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n      case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n      case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n    }\n    var thisBinding = baseCreate(Ctor.prototype),\n        result = Ctor.apply(thisBinding, args);\n\n    // Mimic the constructor's `return` behavior.\n    // See https://es5.github.io/#x13.2.2 for more details.\n    return isObject(result) ? result : thisBinding;\n  };\n}\n\nmodule.exports = createCtor;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n","import $ from 'jquery';\nimport stateCountry from '../common/state-country';\nimport nod from '../common/nod';\nimport utils from '@bigcommerce/stencil-utils';\nimport { Validators } from '../common/form-utils';\nimport swal from '../global/sweet-alert';\n\nexport default class ShippingEstimator {\n    constructor($element) {\n        this.$element = $element;\n\n        this.$state = $('[data-field-type=\"State\"]', this.$element);\n        this.initFormValidation();\n        this.bindStateCountryChange();\n        this.bindEstimatorEvents();\n    }\n\n    initFormValidation() {\n        this.shippingEstimator = 'form[data-shipping-estimator]';\n        this.shippingValidator = nod({\n            submit: `${this.shippingEstimator} .shipping-estimate-submit`,\n        });\n\n        $('.shipping-estimate-submit', this.$element).on('click', event => {\n            // When switching between countries, the state/region is dynamic\n            // Only perform a check for all fields when country has a value\n            // Otherwise areAll('valid') will check country for validity\n            if ($(`${this.shippingEstimator} select[name=\"shipping-country\"]`).val()) {\n                this.shippingValidator.performCheck();\n            }\n\n            if (this.shippingValidator.areAll('valid')) {\n                return;\n            }\n\n            event.preventDefault();\n        });\n\n        this.bindValidation();\n        this.bindStateValidation();\n        this.bindUPSRates();\n    }\n\n    bindValidation() {\n        this.shippingValidator.add([\n            {\n                selector: `${this.shippingEstimator} select[name=\"shipping-country\"]`,\n                validate: (cb, val) => {\n                    const countryId = Number(val);\n                    const result = countryId !== 0 && !Number.isNaN(countryId);\n\n                    cb(result);\n                },\n                errorMessage: 'The \\'Country\\' field cannot be blank.',\n            },\n        ]);\n    }\n\n    bindStateValidation() {\n        this.shippingValidator.add([\n            {\n                selector: $(`${this.shippingEstimator} select[name=\"shipping-state\"]`),\n                validate: (cb) => {\n                    let result;\n\n                    const $ele = $(`${this.shippingEstimator} select[name=\"shipping-state\"]`);\n\n                    if ($ele.length) {\n                        const eleVal = $ele.val();\n\n                        result = eleVal && eleVal.length && eleVal !== 'State/province';\n                    }\n\n                    cb(result);\n                },\n                errorMessage: 'The \\'State/Province\\' field cannot be blank.',\n            },\n        ]);\n    }\n\n    /**\n     * Toggle between default shipping and ups shipping rates\n     */\n    bindUPSRates() {\n        const UPSRateToggle = '.estimator-form-toggleUPSRate';\n\n        $('body').on('click', UPSRateToggle, (event) => {\n            const $estimatorFormUps = $('.estimator-form--ups');\n            const $estimatorFormDefault = $('.estimator-form--default');\n\n            event.preventDefault();\n\n            $estimatorFormUps.toggleClass('u-hiddenVisually');\n            $estimatorFormDefault.toggleClass('u-hiddenVisually');\n        });\n    }\n\n    bindStateCountryChange() {\n        let $last;\n\n        // Requests the states for a country with AJAX\n        stateCountry(this.$state, this.context, { useIdForStates: true }, (err, field) => {\n            if (err) {\n                swal.fire({\n                    text: err,\n                    icon: 'error',\n                });\n\n                throw new Error(err);\n            }\n\n            const $field = $(field);\n\n            if (this.shippingValidator.getStatus(this.$state) !== 'undefined') {\n                this.shippingValidator.remove(this.$state);\n            }\n\n            if ($last) {\n                this.shippingValidator.remove($last);\n            }\n\n            if ($field.is('select')) {\n                $last = field;\n                this.bindStateValidation();\n            } else {\n                $field.attr('placeholder', 'State/province');\n                Validators.cleanUpStateValidation(field);\n            }\n\n            // When you change a country, you swap the state/province between an input and a select dropdown\n            // Not all countries require the province to be filled\n            // We have to remove this class when we swap since nod validation doesn't cleanup for us\n            $(this.shippingEstimator).find('.form-field--success').removeClass('form-field--success');\n        });\n    }\n\n    bindEstimatorEvents() {\n        const $estimatorContainer = $('.shipping-estimator');\n        const $estimatorForm = $('.estimator-form');\n\n        $estimatorForm.on('submit', event => {\n            const params = {\n                country_id: $('[name=\"shipping-country\"]', $estimatorForm).val(),\n                state_id: $('[name=\"shipping-state\"]', $estimatorForm).val(),\n                city: $('[name=\"shipping-city\"]', $estimatorForm).val(),\n                zip_code: $('[name=\"shipping-zip\"]', $estimatorForm).val(),\n            };\n\n            event.preventDefault();\n\n            utils.api.cart.getShippingQuotes(params, 'cart/shipping-quotes', (err, response) => {\n                $('.shipping-quotes').html(response.content);\n\n                // bind the select button\n                $('.select-shipping-quote').on('click', clickEvent => {\n                    const quoteId = $('.shipping-quote:checked').val();\n\n                    clickEvent.preventDefault();\n\n                    utils.api.cart.submitShippingQuote(quoteId, () => {\n                        window.location.reload();\n                    });\n                });\n            });\n        });\n\n        $('.shipping-estimate-show').on('click', event => {\n            event.preventDefault();\n\n            $(event.currentTarget).hide();\n            $estimatorContainer.removeClass('u-hiddenVisually');\n            $('.shipping-estimate-hide').show();\n        });\n\n\n        $('.shipping-estimate-hide').on('click', event => {\n            event.preventDefault();\n\n            $estimatorContainer.addClass('u-hiddenVisually');\n            $('.shipping-estimate-show').show();\n            $('.shipping-estimate-hide').hide();\n        });\n    }\n}\n","import PageManager from './page-manager';\nimport $ from 'jquery';\nimport _ from 'lodash';\nimport giftCertCheck from './common/gift-certificate-validator';\nimport utils from '@bigcommerce/stencil-utils';\nimport ShippingEstimator from './cart/shipping-estimator';\nimport { defaultModal } from './global/modal';\nimport swal from './global/sweet-alert';\n\nexport default class Cart extends PageManager {\n    onReady() {\n        this.$cartContent = $('[data-cart-content]');\n        this.$cartMessages = $('[data-cart-status]');\n        this.$cartTotals = $('[data-cart-totals]');\n        this.$overlay = $('[data-cart] .loadingOverlay')\n            .hide(); // TODO: temporary until roper pulls in his cart components\n\n        this.bindEvents();\n    }\n\n    cartUpdate($target) {\n        const itemId = $target.data('cartItemid');\n        const $el = $(`#qty-${itemId}`);\n        const oldQty = parseInt($el.val(), 10);\n        const maxQty = parseInt($el.data('quantityMax'), 10);\n        const minQty = parseInt($el.data('quantityMin'), 10);\n        const minError = $el.data('quantityMinError');\n        const maxError = $el.data('quantityMaxError');\n        const newQty = $target.data('action') === 'inc' ? oldQty + 1 : oldQty - 1;\n        // Does not quality for min/max quantity\n        if (newQty < minQty) {\n            return swal.fire({\n                text: minError,\n                icon: 'error',\n            });\n        } else if (maxQty > 0 && newQty > maxQty) {\n            return swal.fire({\n                text: maxError,\n                icon: 'error',\n            });\n        }\n\n        this.$overlay.show();\n\n        utils.api.cart.itemUpdate(itemId, newQty, (err, response) => {\n            this.$overlay.hide();\n\n            if (response.data.status === 'succeed') {\n                // if the quantity is changed \"1\" from \"0\", we have to remove the row.\n                const remove = (newQty === 0);\n\n                this.refreshContent(remove);\n            } else {\n                $el.val(oldQty);\n                swal.fire({\n                    text: response.data.errors.join('\\n'),\n                    icon: 'error',\n                });\n            }\n        });\n    }\n\n    cartUpdateQtyTextChange($target, preVal = null) {\n        const itemId = $target.data('cartItemid');\n        const $el = $(`#qty-${itemId}`);\n        const maxQty = parseInt($el.data('quantityMax'), 10);\n        const minQty = parseInt($el.data('quantityMin'), 10);\n        const oldQty = preVal !== null ? preVal : minQty;\n        const minError = $el.data('quantityMinError');\n        const maxError = $el.data('quantityMaxError');\n        const newQty = parseInt(Number($el.val()), 10);\n        let invalidEntry;\n\n        // Does not quality for min/max quantity\n        if (!newQty) {\n            invalidEntry = $el.val();\n            $el.val(oldQty);\n            return swal.fire({\n                text: `${invalidEntry} is not a valid entry`,\n                icon: 'error',\n            });\n        } else if (newQty < minQty) {\n            $el.val(oldQty);\n            return swal.fire({\n                text: minError,\n                icon: 'error',\n            });\n        } else if (maxQty > 0 && newQty > maxQty) {\n            $el.val(oldQty);\n            return swal.fire({\n                text: maxError,\n                icon: 'error',\n            });\n        }\n\n        this.$overlay.show();\n        utils.api.cart.itemUpdate(itemId, newQty, (err, response) => {\n            this.$overlay.hide();\n\n            if (response.data.status === 'succeed') {\n                // if the quantity is changed \"1\" from \"0\", we have to remove the row.\n                const remove = (newQty === 0);\n\n                this.refreshContent(remove);\n            } else {\n                $el.val(oldQty);\n                swal.fire({\n                    text: response.data.errors.join('\\n'),\n                    icon: 'error',\n                });\n            }\n        });\n    }\n\n    cartRemoveItem(itemId) {\n        this.$overlay.show();\n        utils.api.cart.itemRemove(itemId, (err, response) => {\n            if (response.data.status === 'succeed') {\n                this.refreshContent(true);\n            } else {\n                swal.fire({\n                    text: response.data.errors.join('\\n'),\n                    icon: 'error',\n                });\n            }\n        });\n    }\n\n    cartEditOptions(itemId) {\n        const modal = defaultModal();\n        const options = {\n            template: 'cart/modals/configure-product',\n        };\n\n        modal.open();\n\n        utils.api.productAttributes.configureInCart(itemId, options, (err, response) => {\n            modal.updateContent(response.content);\n\n            this.bindGiftWrappingForm();\n        });\n\n        utils.hooks.on('product-option-change', (event, option) => {\n            const $changedOption = $(option);\n            const $form = $changedOption.parents('form');\n            const $submit = $('input.button', $form);\n            const $messageBox = $('.alertMessageBox');\n            const item = $('[name=\"item_id\"]', $form).attr('value');\n\n            utils.api.productAttributes.optionChange(item, $form.serialize(), (err, result) => {\n                const data = result.data || {};\n\n                if (err) {\n                    swal.fire({\n                        text: err,\n                        icon: 'error',\n                    });\n                    return false;\n                }\n\n                if (data.purchasing_message) {\n                    $('p.alertBox-message', $messageBox).text(data.purchasing_message);\n                    $submit.prop('disabled', true);\n                    $messageBox.show();\n                } else {\n                    $submit.prop('disabled', false);\n                    $messageBox.hide();\n                }\n\n                if (!data.purchasable || !data.instock) {\n                    $submit.prop('disabled', true);\n                } else {\n                    $submit.prop('disabled', false);\n                }\n            });\n        });\n    }\n\n    refreshContent(remove) {\n        const $cartItemsRows = $('[data-item-row]', this.$cartContent);\n        const $cartPageTitle = $('[data-cart-page-title]');\n        const options = {\n            template: {\n                content: 'cart/content',\n                totals: 'cart/totals',\n                pageTitle: 'cart/page-title',\n                statusMessages: 'cart/status-messages',\n            },\n        };\n\n        this.$overlay.show();\n\n        // Remove last item from cart? Reload\n        if (remove && $cartItemsRows.length === 1) {\n            return window.location.reload();\n        }\n\n        utils.api.cart.getContent(options, (err, response) => {\n            this.$cartContent.html(response.content);\n            this.$cartTotals.html(response.totals);\n            this.$cartMessages.html(response.statusMessages);\n\n            $cartPageTitle.replaceWith(response.pageTitle);\n            this.bindEvents();\n            this.$overlay.hide();\n\n            const quantity = $('[data-cart-quantity]', this.$cartContent).data('cartQuantity') || 0;\n\n            $('body').trigger('cart-quantity-update', quantity);\n        });\n    }\n\n    bindCartEvents() {\n        const debounceTimeout = 400;\n        const cartUpdate = _.bind(_.debounce(this.cartUpdate, debounceTimeout), this);\n        const cartUpdateQtyTextChange = _.bind(_.debounce(this.cartUpdateQtyTextChange, debounceTimeout), this);\n        const cartRemoveItem = _.bind(_.debounce(this.cartRemoveItem, debounceTimeout), this);\n        let preVal;\n\n        // cart update\n        $('[data-cart-update]', this.$cartContent).on('click', event => {\n            const $target = $(event.currentTarget);\n\n            event.preventDefault();\n\n            // update cart quantity\n            cartUpdate($target);\n        });\n\n        // cart qty manually updates\n        $('.cart-item-qty-input', this.$cartContent).on('focus', function onQtyFocus() {\n            preVal = this.value;\n        }).change(event => {\n            const $target = $(event.currentTarget);\n            event.preventDefault();\n\n            // update cart quantity\n            cartUpdateQtyTextChange($target, preVal);\n        });\n\n        $('.cart-remove', this.$cartContent).on('click', event => {\n            const itemId = $(event.currentTarget).data('cartItemid');\n            const string = $(event.currentTarget).data('confirmDelete');\n            swal.fire({\n                text: string,\n                icon: 'warning',\n                showCancelButton: true,\n            }).then((result) => {\n                if (result.value) {\n                    // remove item from cart\n                    cartRemoveItem(itemId);\n                }\n            });\n            event.preventDefault();\n        });\n\n        $('[data-item-edit]', this.$cartContent).on('click', event => {\n            const itemId = $(event.currentTarget).data('itemEdit');\n\n            event.preventDefault();\n            // edit item in cart\n            this.cartEditOptions(itemId);\n        });\n    }\n\n    bindPromoCodeEvents() {\n        const $couponContainer = $('.coupon-code');\n        const $couponForm = $('.coupon-form');\n        const $codeInput = $('[name=\"couponcode\"]', $couponForm);\n\n        $('.coupon-code-add').on('click', event => {\n            event.preventDefault();\n\n            $(event.currentTarget).hide();\n            $couponContainer.show();\n            $('.coupon-code-cancel').show();\n            $codeInput.trigger('focus');\n        });\n\n        $('.coupon-code-cancel').on('click', event => {\n            event.preventDefault();\n\n            $couponContainer.hide();\n            $('.coupon-code-cancel').hide();\n            $('.coupon-code-add').show();\n        });\n\n        $couponForm.on('submit', event => {\n            const code = $codeInput.val();\n\n            event.preventDefault();\n\n            // Empty code\n            if (!code) {\n                return swal.fire({\n                    text: $codeInput.data('error'),\n                    icon: 'error',\n                });\n            }\n\n            utils.api.cart.applyCode(code, (err, response) => {\n                if (response.data.status === 'success') {\n                    this.refreshContent();\n                } else {\n                    swal.fire({\n                        text: response.data.errors.join('\\n'),\n                        icon: 'error',\n                    });\n                }\n            });\n        });\n    }\n\n    bindGiftCertificateEvents() {\n        const $certContainer = $('.gift-certificate-code');\n        const $certForm = $('.cart-gift-certificate-form');\n        const $certInput = $('[name=\"certcode\"]', $certForm);\n\n        $('.gift-certificate-add').on('click', event => {\n            event.preventDefault();\n            $(event.currentTarget).toggle();\n            $certContainer.toggle();\n            $('.gift-certificate-cancel').toggle();\n        });\n\n        $('.gift-certificate-cancel').on('click', event => {\n            event.preventDefault();\n            $certContainer.toggle();\n            $('.gift-certificate-add').toggle();\n            $('.gift-certificate-cancel').toggle();\n        });\n\n        $certForm.on('submit', event => {\n            const code = $certInput.val();\n\n            event.preventDefault();\n\n            if (!giftCertCheck(code)) {\n                return swal.fire({\n                    text: $certInput.data('error'),\n                    icon: 'error',\n                });\n            }\n\n            utils.api.cart.applyGiftCertificate(code, (err, resp) => {\n                if (resp.data.status === 'success') {\n                    this.refreshContent();\n                } else {\n                    swal.fire({\n                        text: resp.data.errors.join('\\n'),\n                        icon: 'error',\n                    });\n                }\n            });\n        });\n    }\n\n    bindGiftWrappingEvents() {\n        const modal = defaultModal();\n\n        $('[data-item-giftwrap]').on('click', event => {\n            const itemId = $(event.currentTarget).data('itemGiftwrap');\n            const options = {\n                template: 'cart/modals/gift-wrapping-form',\n            };\n\n            event.preventDefault();\n\n            modal.open();\n\n            utils.api.cart.getItemGiftWrappingOptions(itemId, options, (err, response) => {\n                modal.updateContent(response.content);\n\n                this.bindGiftWrappingForm();\n            });\n        });\n    }\n\n    bindGiftWrappingForm() {\n        $('.giftWrapping-select').on('change', event => {\n            const $select = $(event.currentTarget);\n            const id = $select.val();\n            const index = $select.data('index');\n\n            if (!id) {\n                return;\n            }\n\n            const allowMessage = $select.find(`option[value=${id}]`).data('allowMessage');\n\n            $(`.giftWrapping-image-${index}`).hide();\n            $(`#giftWrapping-image-${index}-${id}`).show();\n\n            if (allowMessage) {\n                $(`#giftWrapping-message-${index}`).show();\n            } else {\n                $(`#giftWrapping-message-${index}`).hide();\n            }\n        });\n\n        $('.giftWrapping-select').trigger('change');\n\n        function toggleViews() {\n            const value = $('input:radio[name =\"giftwraptype\"]:checked').val();\n            const $singleForm = $('.giftWrapping-single');\n            const $multiForm = $('.giftWrapping-multiple');\n\n            if (value === 'same') {\n                $singleForm.show();\n                $multiForm.hide();\n            } else {\n                $singleForm.hide();\n                $multiForm.show();\n            }\n        }\n\n        $('[name=\"giftwraptype\"]').on('click', toggleViews);\n\n        toggleViews();\n    }\n\n    bindEvents() {\n        this.bindCartEvents();\n        this.bindPromoCodeEvents();\n        this.bindGiftWrappingEvents();\n        this.bindGiftCertificateEvents();\n\n        // initiate shipping estimator module\n        this.shippingEstimator = new ShippingEstimator($('[data-shipping-estimator]'));\n    }\n}\n"],"sourceRoot":""}